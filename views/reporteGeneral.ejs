<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= titulo %> - Regomax</title>
    
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    
    <!-- Custom styles -->
    <link rel="stylesheet" href="/assets/css/home.css">
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container-fluid">
            <a class="navbar-brand d-flex align-items-center" href="/home">
                <img src="/assets/img/regomax.png" alt="Regomax Logo" class="bg-white rounded p-1">
                <span class="ms-2 fw-bold">Regomax S.A.</span>
            </a>
            
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto align-items-center">
                    <li class="nav-item user-welcome me-3">
                        <span class="text-light">BIENVENIDO/A, <b><%= usuario.username %></b></span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="bi bi-globe me-1"></i> Ver sitio</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><i class="bi bi-key me-1"></i> Cambiar contraseña</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" id="logout-link"><i class="bi bi-box-arrow-right me-1"></i> Cerrar sesión</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container my-4">
        <div class="row mb-4">
            <div class="col">
                <div class="menu-container p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h4 class="menu-heading mb-0">
                            <i class="bi bi-graph-up me-2"></i>Reporte General Consolidado
                        </h4>
                        <div>
                            <div class="input-group">
                                <input type="date" id="fechaReporte" class="form-control">
                                <button id="btnGenerarReporte" class="btn btn-primary">
                                    <i class="bi bi-sync me-1"></i> Generar
                                </button>
                                <button id="btnExportarExcel" class="btn btn-success ms-2">
                                    <i class="bi bi-file-excel me-1"></i> Exportar
                                </button>
                                <button id="btnImprimir" class="btn btn-info ms-2">
                                    <i class="bi bi-print me-1"></i> Imprimir
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div id="contenedorReporte">
                        <div class="row">
                            <div class="col-12">
                                <div class="alert alert-info" id="loadingAlert">
                                    <i class="bi bi-info-circle me-2"></i> Seleccione una fecha y haga clic en "Generar" para visualizar el reporte
                                </div>
                            </div>
                        </div>
                
                        <div id="reporteContent" style="display: none;">
                            <!-- Cabecera del reporte -->
                            <div class="row mb-3">
                                <div class="col-12">
                                    <div class="card">
                                        <div class="card-header bg-primary text-white">
                                            <h5 class="card-title mb-0">Reporte del día <span id="fechaReporteHeader"></span></h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <div class="info-box bg-light">
                                                        <div class="info-box-content">
                                                            <span class="info-box-text">Producción Total del Día</span>
                                                            <span class="info-box-number" id="produccionTotalDia">0 kg</span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="info-box bg-light">
                                                        <div class="info-box-content">
                                                            <span class="info-box-text">NFU Ingresado Hoy</span>
                                                            <span class="info-box-number" id="nfuTotalDia">0 kg</span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="info-box bg-light">
                                                        <div class="info-box-content">
                                                            <span class="info-box-text">Despachos Totales del Día</span>
                                                            <span class="info-box-number" id="despachosTotalDia">0 kg</span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                
                            <!-- Sección 1: Producción - Cuadrado ancho completo -->
                            <div class="row mb-3">
                                <div class="col-12">
                                    <div class="card">
                                        <div class="card-header bg-success text-white">
                                            <h5 class="card-title mb-0">Producción por Producto</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table table-striped table-bordered" id="tablaProduccionGeneral">
                                                    <thead>
                                                        <tr>
                                                            <th>Producto</th>
                                                            <th>Fecha</th>
                                                            <th>Producido Hoy (kg)</th>
                                                            <th>Acumulado del Mes (kg)</th>
                                                            <th>Proyección (kg)</th>
                                                            <th>Planificado Hoy (kg)</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <!-- Se llenará dinámicamente -->
                                                    </tbody>
                                                    <tfoot>
                                                        <tr class="fw-bold">
                                                            <td>TOTAL</td>
                                                            <td id="fechaActual"></td>
                                                            <td id="totalProducidoHoy">0 kg</td>
                                                            <td id="totalAcumuladoMes">0 kg</td>
                                                            <td id="totalProyeccionMes">0 kg</td>
                                                            <td id="totalPlanificadoHoy">0 kg</td>
                                                        </tr>
                                                    </tfoot>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Sección 2: Productos Despachados -->
                            <div class="row mb-3">
                                <div class="col-12">
                                    <div class="card">
                                        <div class="card-header bg-danger text-white">
                                            <h5 class="card-title mb-0">Productos Despachados</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table table-striped table-bordered" id="tablaDespachosGeneral">
                                                    <thead>
                                                        <tr>
                                                            <th>Producto</th>
                                                            <th>Fecha</th>
                                                            <th>Despachado Hoy (kg)</th>
                                                            <th>Acumulado del Mes (kg)</th>
                                                            <th>Proyección (kg)</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <!-- Se llenará dinámicamente -->
                                                    </tbody>
                                                    <tfoot>
                                                        <tr class="fw-bold">
                                                            <td>TOTAL</td>
                                                            <td id="fechaActualDespachos"></td>
                                                            <td id="totalDespachosDia">0 kg</td>
                                                            <td id="totalDespachosAcum">0 kg</td>
                                                            <td id="totalProyeccionDespachos">0 kg</td>
                                                        </tr>
                                                    </tfoot>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                
                            <!-- Sección 3: NFU -->
                            <div class="row mb-3">
                                <div class="col-12">
                                    <div class="card">
                                        <div class="card-header bg-info text-white">
                                            <h5 class="card-title mb-0">Neumáticos Fuera de Uso (NFU)</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table table-striped table-bordered" id="tablaNFU">
                                                    <thead>
                                                        <tr>
                                                            <th>NFU</th>
                                                            <th>Fecha</th>
                                                            <th>Ingresado Hoy (kg)</th>
                                                            <th>Acumulado (kg)</th>
                                                            <th>Proyección (kg)</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr>
                                                            <td>Neumáticos Fuera de Uso</td>
                                                            <td id="fechaActualNFU"></td>
                                                            <td id="nfuHoy">0 kg</td>
                                                            <td id="nfuAcumulado">0 kg</td>
                                                            <td id="nfuProyeccion">0 kg</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                
                            <!-- Sección 4: Stock Total -->
                            <div class="row mb-3">
                                <div class="col-12">
                                    <div class="card">
                                        <div class="card-header bg-primary text-white">
                                            <h5 class="card-title mb-0">Stock Total</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table table-striped table-bordered" id="tablaStockTotal">
                                                    <thead>
                                                        <tr>
                                                            <th>Producto</th>
                                                            <th>Bolsones</th>
                                                            <th>Peso (kg)</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <!-- Se llenará dinámicamente -->
                                                    </tbody>
                                                    <tfoot>
                                                        <tr class="fw-bold">
                                                            <td>TOTAL</td>
                                                            <td id="totalBolsonesStock">0</td>
                                                            <td id="totalPesoStock">0 kg</td>
                                                        </tr>
                                                    </tfoot>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Sección 5: Gráfico comparativo Producción vs Planificación Acumulada -->
                            <div class="row mb-3">
                                <div class="col-12">
                                    <div class="card">
                                        <div class="card-header bg-warning text-dark">
                                            <h5 class="card-title mb-0">Comparativo: Producción Acumulada vs Planificación Acumulada</h5>
                                        </div>
                                        <div class="card-body">
                                            <div id="graficoProdVsPlan" style="height: 400px; position: relative;">
                                                <canvas id="chartProdVsPlan" style="height: 400px; width: 100%;"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col">
                <a href="/home" class="btn btn-secondary">
                    <i class="bi bi-arrow-left me-2"></i>Volver al panel
                </a>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/xlsx@0.17.0/dist/xlsx.full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="/assets/js/common.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Establecer la fecha de hoy por defecto
            document.getElementById('fechaReporte').valueAsDate = new Date();
            
            // Evento para generar el reporte
            document.getElementById('btnGenerarReporte').addEventListener('click', generarReporte);
            
            // Evento para exportar a Excel
            document.getElementById('btnExportarExcel').addEventListener('click', exportarExcel);
            
            // Evento para imprimir
            document.getElementById('btnImprimir').addEventListener('click', imprimirReporte);
        });

        async function generarReporte() {
            const fecha = document.getElementById('fechaReporte').value;
            
            if (!fecha) {
                alert('Por favor seleccione una fecha para generar el reporte');
                return;
            }
            
            // Mostrar loading
            document.getElementById('loadingAlert').innerHTML = '<i class="bi bi-spinner bi-spin"></i> Cargando datos del reporte...';
            document.getElementById('reporteContent').style.display = 'none';
            
            try {
                const response = await fetch(`/api/reportes/completo?fecha=${fecha}`);
                const data = await response.json();
                
                if (data.success) {
                    mostrarReporte(data.data);
                } else {
                    document.getElementById('loadingAlert').innerHTML = 
                        `<i class="bi bi-exclamation-triangle"></i> Error: ${data.message || 'No se pudo cargar el reporte'}`;
                }
            } catch (error) {
                console.error('Error al generar reporte:', error);
                document.getElementById('loadingAlert').innerHTML = 
                    '<i class="bi bi-exclamation-triangle"></i> Error al conectar con el servidor';
            }
        }

        function mostrarReporte(data) {
            // Actualizar fecha en el encabezado - asegurándonos que se muestre correctamente
            let fechaReporte = data.fecha; // formato YYYY-MM-DD
            const [year, month, day] = fechaReporte.split('-');
            // Crear una fecha específica sin depender de la zona horaria
            const fechaFormateada = new Date(year, month-1, day);
            const fechaFormateadaStr = fechaFormateada.toLocaleDateString();
            document.getElementById('fechaReporteHeader').textContent = fechaFormateadaStr;
            
            // Actualizar valores totales en la cabecera
            let totalPesoDia = 0;
            if (data.produccion && data.produccion.length > 0) {
                data.produccion.forEach(prod => {
                    totalPesoDia += prod.pesoTotal;
                });
            }
            document.getElementById('produccionTotalDia').textContent = `${formatNumber(totalPesoDia)} kg`;
            
            // NFU diario en la cabecera
            document.getElementById('nfuTotalDia').textContent = 
                `${formatNumber(data.nfu && data.nfu.diario ? data.nfu.diario.cantidadTotal : 0)} kg`;
            
            // Despachos totales en la cabecera
            let totalPesoDespachoDia = 0;
            if (data.despachos && data.despachos.length > 0) {
                data.despachos.forEach(desp => {
                    totalPesoDespachoDia += desp.pesoTotal;
                });
            }
            document.getElementById('despachosTotalDia').textContent = `${formatNumber(totalPesoDespachoDia)} kg`;
            
            // Crear un mapa de producción diaria para facilitar el acceso
            const produccionDiariaPorProducto = {};
            if (data.produccion && data.produccion.length > 0) {
                data.produccion.forEach(prod => {
                    produccionDiariaPorProducto[prod.productoId] = {
                        nombre: prod.nombre,
                        pesoTotal: prod.pesoTotal,
                        cantidadBolsones: prod.cantidadBolsones,
                        planificacion: prod.planificacion || 0
                    };
                });
            }
            
            // Crear un mapa de despachos diarios para facilitar el acceso
            const despachosDiariosPorProducto = {};
            if (data.despachos && data.despachos.length > 0) {
                data.despachos.forEach(desp => {
                    despachosDiariosPorProducto[desp.productoId] = {
                        nombre: desp.nombre,
                        pesoTotal: desp.pesoTotal,
                        cantidadBolsones: desp.cantidadBolsones
                    };
                });
            }
            
            // 1. NUEVA TABLA - Producción General (productos con fecha, acumulado y proyección)
            const tablaProduccionGeneral = document.getElementById('tablaProduccionGeneral').getElementsByTagName('tbody')[0];
            tablaProduccionGeneral.innerHTML = '';
            
            let totalAcumuladoMes = 0;
            let totalProyeccionMes = 0;
            let totalProducidoHoy = totalPesoDia; // Ya calculado arriba
            let totalPlanificadoHoy = 0; // Para sumar la planificación total
            
            if (data.stockAcumuladoMes && data.stockAcumuladoMes.length > 0) {
                data.stockAcumuladoMes.forEach(prod => {
                    const row = tablaProduccionGeneral.insertRow();
                    
                    // Buscar si hay producción del día para este producto
                    const produccionHoy = produccionDiariaPorProducto[prod.productoId] || { pesoTotal: 0, planificacion: 0 };
                    
                    // Obtener planificación para este producto
                    const planificacionProducto = prod.planificacion || 0;
                    totalPlanificadoHoy += planificacionProducto;
                    
                    row.insertCell(0).textContent = prod.nombre;
                    row.insertCell(1).textContent = fechaFormateadaStr;
                    row.insertCell(2).textContent = `${formatNumber(produccionHoy.pesoTotal)} kg`;
                    row.insertCell(3).textContent = `${formatNumber(prod.pesoTotal)} kg`;
                    row.insertCell(4).textContent = `${formatNumber(prod.proyeccion)} kg`;
                    row.insertCell(5).textContent = `${formatNumber(planificacionProducto)} kg`;
                    
                    totalAcumuladoMes += prod.pesoTotal;
                    totalProyeccionMes += prod.proyeccion;
                });
            } else {
                const row = tablaProduccionGeneral.insertRow();
                const cell = row.insertCell(0);
                cell.colSpan = 6;
                cell.textContent = "No hay datos acumulados para este mes";
                cell.className = "text-center";
            }
            
            document.getElementById('fechaActual').textContent = fechaFormateadaStr;
            document.getElementById('totalProducidoHoy').textContent = `${formatNumber(totalProducidoHoy)} kg`;
            document.getElementById('totalPlanificadoHoy').textContent = `${formatNumber(totalPlanificadoHoy)} kg`;
            document.getElementById('totalAcumuladoMes').textContent = `${formatNumber(totalAcumuladoMes)} kg`;
            document.getElementById('totalProyeccionMes').textContent = `${formatNumber(totalProyeccionMes)} kg`;
            
            // 2. NUEVA TABLA - Productos Despachados
            const tablaDespachosGeneral = document.getElementById('tablaDespachosGeneral').getElementsByTagName('tbody')[0];
            tablaDespachosGeneral.innerHTML = '';
            
            let totalDespachosAcum = 0;
            let totalProyeccionDespachos = 0;
            let totalDespachosDia = totalPesoDespachoDia; // Ya calculado arriba
            
            if (data.despachosAcumuladosMes && data.despachosAcumuladosMes.length > 0) {
                data.despachosAcumuladosMes.forEach(desp => {
                    const row = tablaDespachosGeneral.insertRow();
                    
                    // Buscar si hay despachos del día para este producto
                    const despachoHoy = despachosDiariosPorProducto[desp.productoId] || { pesoTotal: 0 };
                    
                    row.insertCell(0).textContent = desp.nombre;
                    row.insertCell(1).textContent = fechaFormateadaStr;
                    row.insertCell(2).textContent = `${formatNumber(despachoHoy.pesoTotal)} kg`;
                    row.insertCell(3).textContent = `${formatNumber(desp.pesoTotal)} kg`;
                    row.insertCell(4).textContent = `${formatNumber(desp.proyeccion)} kg`;
                    
                    totalDespachosAcum += desp.pesoTotal;
                    totalProyeccionDespachos += desp.proyeccion;
                });
            } else {
                const row = tablaDespachosGeneral.insertRow();
                const cell = row.insertCell(0);
                cell.colSpan = 5;
                cell.textContent = "No hay despachos acumulados para este mes";
                cell.className = "text-center";
            }
            
            document.getElementById('fechaActualDespachos').textContent = fechaFormateadaStr;
            document.getElementById('totalDespachosDia').textContent = `${formatNumber(totalDespachosDia)} kg`;
            document.getElementById('totalDespachosAcum').textContent = `${formatNumber(totalDespachosAcum)} kg`;
            document.getElementById('totalProyeccionDespachos').textContent = `${formatNumber(totalProyeccionDespachos)} kg`;
            
            // 3. NUEVA TABLA - NFU
            document.getElementById('fechaActualNFU').textContent = fechaFormateadaStr;
            document.getElementById('nfuHoy').textContent = 
                `${formatNumber(data.nfu && data.nfu.diario ? data.nfu.diario.cantidadTotal : 0)} kg`;
            
            const nfuAcumulado = data.nfu && data.nfu.acumuladoMes ? data.nfu.acumuladoMes.cantidadTotal : 0;
            document.getElementById('nfuAcumulado').textContent = `${formatNumber(nfuAcumulado)} kg`;
            
            // Usamos la proyección que viene directamente del backend
            const nfuProyeccion = data.nfu && data.nfu.acumuladoMes ? data.nfu.acumuladoMes.proyeccion : 0;
            document.getElementById('nfuProyeccion').textContent = `${formatNumber(nfuProyeccion)} kg`;
            
            // 4. Stock Total
            const tablaStockTotal = document.getElementById('tablaStockTotal').getElementsByTagName('tbody')[0];
            tablaStockTotal.innerHTML = '';
            
            let totalBolsonesStock = 0;
            let totalPesoStock = 0;
            
            if (data.stockAcumuladoHistorico && data.stockAcumuladoHistorico.length > 0) {
                data.stockAcumuladoHistorico.forEach(prod => {
                    const row = tablaStockTotal.insertRow();
                    
                    row.insertCell(0).textContent = prod.nombre;
                    row.insertCell(1).textContent = prod.cantidadBolsones;
                    row.insertCell(2).textContent = `${formatNumber(prod.pesoTotal)} kg`;
                    
                    totalBolsonesStock += prod.cantidadBolsones;
                    totalPesoStock += prod.pesoTotal;
                });
            } else {
                const row = tablaStockTotal.insertRow();
                const cell = row.insertCell(0);
                cell.colSpan = 3;
                cell.textContent = "No hay stock disponible";
                cell.className = "text-center";
            }
            
            document.getElementById('totalBolsonesStock').textContent = totalBolsonesStock;
            document.getElementById('totalPesoStock').textContent = `${formatNumber(totalPesoStock)} kg`;
            
            // Mostrar el contenido del reporte y ocultar mensaje de loading
            document.getElementById('loadingAlert').style.display = 'none';
            document.getElementById('reporteContent').style.display = 'block';
            
            // Esperar un frame para que el layout tenga dimensiones reales
            requestAnimationFrame(() => generarGraficoComparativo(data));
        }
        
        function generarGraficoComparativo(data) {
          try {
            console.log('Iniciando generación de gráfico de líneas');
            const canvas = document.getElementById('chartProdVsPlan');
            const ctx = canvas.getContext('2d');
            
            // Aseguramos dimensiones explícitas del canvas
            canvas.height = 400;
            canvas.width = canvas.parentElement.offsetWidth || 800;
            
            // Verificar si tenemos datos válidos para el gráfico
            if (!data) {
              ctx.font = '16px Arial';
              ctx.fillStyle = '#666';
              ctx.textAlign = 'center';
              ctx.fillText('No hay datos disponibles para el gráfico', canvas.width / 2, canvas.height / 2);
              return;
            }
            
            // Destruir gráfico anterior si existe (de forma segura)
            if (window.chartProdVsPlan instanceof Chart) {
              window.chartProdVsPlan.destroy();
              window.chartProdVsPlan = null;
            }
            
            // Extraer la fecha del reporte para determinar el mes actual
            const fecha = data.fecha;
            const [anio, mes, dia] = fecha.split('-').map(Number);
            
            // Generar días del mes para el eje X (del 1 al día actual)
            const diasDelMes = Array.from({length: dia}, (_, i) => i + 1);
            
            // Para este ejemplo, crearemos datos simulados de evolución diaria
            // En una implementación real, estos datos vendrían del backend
            
            // Simular datos de producción acumulada diaria (creciente hasta el día actual)
            const produccionAcumulada = [];
            let acumuladoActual = 0;
            
            // Obtener la producción total acumulada hasta la fecha actual
            let produccionTotalAcumulada = 0;
            if (data.stockAcumuladoMes && Array.isArray(data.stockAcumuladoMes)) {
              produccionTotalAcumulada = data.stockAcumuladoMes.reduce((total, prod) => total + (Number(prod.pesoTotal) || 0), 0);
            }
            
            // Distribuir la producción a lo largo de los días (con incremento progresivo)
            diasDelMes.forEach((_, index) => {
              // Factor de incremento progresivo (día 1 produce menos que día 30)
              const factorIncremento = (index + 1) / diasDelMes.length;
              // Simulamos un incremento diario proporcional al día del mes
              const incrementoDiario = produccionTotalAcumulada * (factorIncremento * 0.5) / diasDelMes.length;
              acumuladoActual += incrementoDiario;
              produccionAcumulada.push(Math.round(acumuladoActual));
            });
            
            // Ajustamos el último valor para que coincida con el total acumulado real
            if (produccionAcumulada.length > 0) {
              produccionAcumulada[produccionAcumulada.length - 1] = produccionTotalAcumulada;
            }
            
            // Simular datos de planificación acumulada diaria
            const planificacionAcumulada = [];
            let planAcumulado = 0;
            
            // Obtener la planificación total acumulada hasta la fecha actual
            let planificacionTotalAcumulada = 0;
            if (data.planificacionAcumulada && Array.isArray(data.planificacionAcumulada.productos)) {
              planificacionTotalAcumulada = data.planificacionAcumulada.productos.reduce(
                (total, prod) => total + (Number(prod.kilosAcumulados) || 0), 0
              );
            }
            
            // Distribuir la planificación de manera uniforme a lo largo de los días
            const planDiario = planificacionTotalAcumulada / diasDelMes.length;
            diasDelMes.forEach(() => {
              planAcumulado += planDiario;
              planificacionAcumulada.push(Math.round(planAcumulado));
            });
            
            // Ajustamos el último valor para que coincida con el total acumulado real
            if (planificacionAcumulada.length > 0) {
              planificacionAcumulada[planificacionAcumulada.length - 1] = planificacionTotalAcumulada;
            }
            
            // Preparar etiquetas para el eje X (días del mes)
            const etiquetasDias = diasDelMes.map(d => `${d}/${mes}/${anio}`);
            
            // Crear el gráfico de líneas
            window.chartProdVsPlan = new Chart(ctx, {
              type: 'line',
              data: {
                labels: etiquetasDias,
                datasets: [
                  {
                    label: 'Producción Acumulada (kg)',
                    data: produccionAcumulada,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 2,
                    tension: 0.1,
                    fill: true
                  },
                  {
                    label: 'Planificación Acumulada (kg)',
                    data: planificacionAcumulada,
                    backgroundColor: 'rgba(255, 206, 86, 0.2)',
                    borderColor: 'rgba(255, 206, 86, 1)',
                    borderWidth: 2,
                    tension: 0.1,
                    fill: true
                  }
                ]
              },
              options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                  x: {
                    title: {
                      display: true,
                      text: `Días del mes (${mes}/${anio})`
                    }
                  },
                  y: { 
                    beginAtZero: true, 
                    title: { 
                      display: true, 
                      text: 'Kilos Acumulados (kg)' 
                    } 
                  }
                },
                plugins: {
                  title: {
                    display: true,
                    text: `Evolución: Producción vs Planificación Acumulada - ${mes}/${anio}`,
                    font: { size: 16 }
                  },
                  tooltip: {
                    callbacks: {
                      label: (ctx) => `${ctx.dataset.label}: ${Number(ctx.raw).toLocaleString('es-AR')} kg`
                    }
                  },
                  legend: {
                    position: 'top'
                  }
                }
              }
            });
            
          } catch (error) {
            console.error('Error al crear gráfico:', error);
            
            // Mostrar mensaje de error en el canvas
            try {
              const canvas = document.getElementById('chartProdVsPlan');
              const ctx = canvas.getContext('2d');
              ctx.font = '16px Arial';
              ctx.fillStyle = '#dc3545';
              ctx.textAlign = 'center';
              ctx.fillText('Error al crear el gráfico: ' + error.message, canvas.width / 2, canvas.height / 2);
            } catch(e) {
              console.error('Error al mostrar mensaje de error en canvas:', e);
            }
          }
        }

        function exportarExcel() {
            if (document.getElementById('reporteContent').style.display === 'none') {
                alert('Primero debe generar un reporte');
                return;
            }

            const workbook = XLSX.utils.book_new();
            
            // Fecha del reporte
            const fecha = document.getElementById('fechaReporteHeader').textContent;
            
            // 1. Producción General (productos, fecha, acumulado, proyección)
            const tablaProduccion = document.getElementById('tablaProduccionGeneral');
            const wsProduccion = XLSX.utils.table_to_sheet(tablaProduccion);
            XLSX.utils.book_append_sheet(workbook, wsProduccion, "Producción General");
            
            // 2. Despachos (productos, fecha, acumulado, proyección)
            const tablaDespachos = document.getElementById('tablaDespachosGeneral');
            const wsDespachos = XLSX.utils.table_to_sheet(tablaDespachos);
            XLSX.utils.book_append_sheet(workbook, wsDespachos, "Despachos");
            
            // 3. NFU
            const tablaNFU = document.getElementById('tablaNFU');
            const wsNFU = XLSX.utils.table_to_sheet(tablaNFU);
            XLSX.utils.book_append_sheet(workbook, wsNFU, "NFU");
            
            // 4. Stock Total
            const tablaStock = document.getElementById('tablaStockTotal');
            const wsStock = XLSX.utils.table_to_sheet(tablaStock);
            XLSX.utils.book_append_sheet(workbook, wsStock, "Stock Total");
            
            // Exportar el archivo
            XLSX.writeFile(workbook, `Reporte_General_${fecha.replace(/\//g, '-')}.xlsx`);
        }

        function imprimirReporte() {
            if (document.getElementById('reporteContent').style.display === 'none') {
                alert('Primero debe generar un reporte');
                return;
            }
            
            window.print();
        }

        function formatNumber(num) {
            return Number(num).toLocaleString('es-AR');
        }
    </script>

    <style>
        @media print {
            .btn, input, select, .no-print {
                display: none !important;
            }
            body {
                padding: 0;
                margin: 0;
            }
            .card {
                break-inside: avoid;
            }
            .container {
                width: 100%;
                padding: 0;
                max-width: none;
            }
        }
        .info-box {
            border-radius: 0.25rem;
            padding: 1rem;
            text-align: center;
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
        }
        .info-box-text {
            display: block;
            font-size: 0.9rem;
            color: #6c757d;
        }
        .info-box-number {
            display: block;
            font-size: 1.5rem;
            font-weight: bold;
            margin-top: 0.5rem;
        }
    </style>
</body>
</html>